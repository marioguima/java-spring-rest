spring.datasource.url=jdbc:mysql://172.27.40.80:3306/guimasfood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root

#spring.jpa.generate-ddl=true
# A propriedade spring.jpa.hibernate.ddl-auto define a maneira que o hibernate vai se comportar em relação ao esquema da base de dados
# se ele vai excluir e criar as tabelas novamente (create)
# se vai atualizar (update), porém, se uma coluna mduar de nome ele cria uma coluna nova e mantém a anterior
# se mudo uma coluna de nullable para not null ele não consegue alterar
#spring.jpa.hibernate.ddl-auto=updat

# A geração das tabelas será feita utilizando um gerenciador de versão de script de banco de dados chamado
# Flyway

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#hibernate.dialect=org.hibernate.dialect.MySQL8Dialec
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

#### Configurando o pool de conexõe (hikari) ####
# Configurando o máximo de conexões simultâneas
spring.datasource.hikari.maximum-pool-size=5
# configurando o mínimo de conexões oceosas
# Obs. se não for iformado ela terá o mesmo valor do máximo de conexões
spring.datasource.hikari.minimum-idle=3
# Tempo que as conexões idle (oceosas) podem ficar aguardando, após esse tempo ela será descartarda
# O tempo é em milisegundo (10000) dez mil é igual a 10 segundos, que é o mínimo que pode ser informado
# Esse exemplo é apenas ditático, pois por padrão ele já vem configurado com 10 segundos (10000)
spring.datasource.hikari.idle-timeout=10000
